version: "3.2"

services:
  nginx:
    image: nginx:1.17.10-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - echarles-front-net
    depends_on:
      - postgresql
    volumes:
      - ./nginx/conf:/etc/nginx
      - ./nginx/www:/var/www

  api:
    image: golang-cherry-back:1.14.2-alpine3.11
    restart: always
    build:
      context: ./API
    environment:
      - DB_USER=${POSTGRES_USER}
      - DB_NAME=${POSTGRES_DB}
      - DB_PASSWORD=${POSTGRES_PWD}
      - DB_PORT=${POSTGRES_PORT}
      - DB_HOSTNAME=${POSTGRES_HOSTNAME}
      - DEBUG
    networks:
      - echarles-back-net
      - echarles-front-net
    network_mode: host
    depends_on:
      - postgresql
    volumes:
      - ${HOST_STORAGE_PATH}:/srv/storage

  postgresql:
    image: postgresql:12.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
      - PGDATA=${PG_DOCKER_DATA_PATH}
    ports:
      - "${POSTGRES_PUBLISED_PORT}:${POSTGRES_PORT}"
    networks:
      - echarles-back-net
    volumes:
      - ${POSTGRES_HOST_DATA_PATH}:${PG_DOCKER_DATA_PATH}
      - ./postgresql:/docker-entrypoint-initdb.d

networks:
  cherry-back-net:
    external: false
  cherry-front-net:
    external: false
